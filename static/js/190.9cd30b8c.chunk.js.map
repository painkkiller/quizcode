{"version":3,"file":"static/js/190.9cd30b8c.chunk.js","mappings":"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","sources":["components/Typography/index.jsx","content/pages/Login/JwtLogin.jsx","contexts/JWTAuthContext.js","components/Loader/index.jsx","hooks/useAuth.js"],"sourcesContent":["import { Box, styled } from '@mui/material';\nimport clsx from 'clsx';\n\nconst StyledBox = styled(Box)(({ ellipsis }) => ({\n  ...(ellipsis && {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  })\n}));\n\nexport const H1 = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"h1\"\n      mb={0}\n      mt={0}\n      fontSize=\"28px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const H2 = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"h2\"\n      mb={0}\n      mt={0}\n      fontSize=\"24px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const H3 = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"h3\"\n      mb={0}\n      mt={0}\n      fontSize=\"18px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const H4 = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({\n        [className || '']: true\n      })}\n      component=\"h4\"\n      mb={0}\n      mt={0}\n      fontSize=\"16px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const H5 = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"h5\"\n      mb={0}\n      mt={0}\n      fontSize=\"14px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const H6 = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"h6\"\n      mb={0}\n      mt={0}\n      fontSize=\"13px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const Paragraph = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"p\"\n      mb={0}\n      mt={0}\n      fontSize=\"14px\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const Small = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"small\"\n      fontSize=\"12px\"\n      fontWeight=\"500\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const Span = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"span\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};\n\nexport const Tiny = ({ children, className, ellipsis, textTransform, ...props }) => {\n  return (\n    <StyledBox\n      ellipsis={ellipsis}\n      className={clsx({ [className || '']: true })}\n      component=\"small\"\n      fontSize=\"10px\"\n      lineHeight=\"1.5\"\n      {...props}\n    >\n      {children}\n    </StyledBox>\n  );\n};","import { LoadingButton } from '@mui/lab';\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/material';\nimport { Paragraph } from 'src/components/Typography';\nimport useAuth from 'src/hooks/useAuth';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\nconst ContentBox = styled(Box)(() => ({\n  height: '100%',\n  padding: '32px',\n  position: 'relative',\n  background: 'rgba(0, 0, 0, 0.01)'\n}));\n\nconst JWTRoot = styled(JustifyBox)(() => ({\n  background: '#1A2038',\n  minHeight: '100% !important',\n  '& .card': {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: '1rem',\n    display: 'flex',\n    borderRadius: 12,\n    alignItems: 'center'\n  }\n}));\n\n// inital login credentials\nconst initialValues = {\n  email: 'jason@ui-lib.com',\n  password: 'dummyPass',\n  remember: true\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, 'Password must be 6 character length')\n    .required('Password is required!'),\n  email: Yup.string().email('Invalid Email address').required('Email is required!')\n});\n\nconst JwtLogin = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const { login } = useAuth();\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n    try {\n      await login(values.email, values.password);\n      navigate('/dashboards/new-service');\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <JWTRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\n              <img src=\"/static/images/illustrations/dreamer.svg\" width=\"100%\" alt=\"\" />\n            </JustifyBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 1.5 }}\n                    />\n\n                    <FlexBox justifyContent=\"space-between\">\n                      <FlexBox gap={1}>\n                        <Checkbox\n                          size=\"small\"\n                          name=\"remember\"\n                          onChange={handleChange}\n                          checked={values.remember}\n                          sx={{ padding: 0 }}\n                        />\n\n                        <Paragraph>Remember Me</Paragraph>\n                      </FlexBox>\n\n                      <NavLink\n                        to=\"/auth/forgot-password\"\n                        style={{ color: theme.palette.primary.main }}\n                      >\n                        Forgot password?\n                      </NavLink>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}\n                    >\n                      Login\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Don't have an account?\n                      <NavLink\n                        to=\"/auth/signup\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n                      >\n                        Register\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRoot>\n  );\n};\n\nexport default JwtLogin;","import { createContext, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport Loading from 'src/components/Loader';\n\nconst initialState = {\n  user: null,\n  isInitialised: false,\n  isAuthenticated: false\n};\n\n// const isValidToken = (accessToken) => {\n//   if (!accessToken) return false;\n\n//   const decodedToken = jwtDecode(accessToken);\n//   const currentTime = Date.now() / 1000;\n//   return decodedToken.exp > currentTime;\n// };\n\n// const setSession = (accessToken) => {\n//   if (accessToken) {\n//     localStorage.setItem('accessToken', accessToken);\n//     axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n//   } else {\n//     localStorage.removeItem('accessToken');\n//     delete axios.defaults.headers.common.Authorization;\n//   }\n// };\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT': {\n      const { isAuthenticated, user } = action.payload;\n      return { ...state, isAuthenticated, isInitialised: true, user };\n    }\n\n    case 'LOGIN': {\n      const { user } = action.payload;\n      return { ...state, isAuthenticated: true, user };\n    }\n\n    case 'LOGOUT': {\n      return { ...state, isAuthenticated: false, user: null };\n    }\n\n    case 'REGISTER': {\n      const { user } = action.payload;\n\n      return { ...state, isAuthenticated: true, user };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst AuthContext = createContext({\n  ...initialState,\n  method: 'JWT',\n  login: () => {},\n  logout: () => {},\n  register: () => {}\n});\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const login = async (email, password) => {\n    const response = await axios.post('/api/auth/login', { email, password });\n    const { user } = response.data;\n\n    dispatch({ type: 'LOGIN', payload: { user } });\n  };\n\n  const register = async (email, username, password) => {\n    const response = await axios.post('/api/auth/register', { email, username, password });\n    const { user } = response.data;\n\n    dispatch({ type: 'REGISTER', payload: { user } });\n  };\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data } = await axios.get('/api/auth/profile');\n        dispatch({ type: 'INIT', payload: { isAuthenticated: true, user: data.user } });\n      } catch (err) {\n        console.error(err);\n        dispatch({ type: 'INIT', payload: { isAuthenticated: false, user: null } });\n      }\n    })();\n  }, []);\n\n  // SHOW LOADER\n  if (!state.isInitialised) return <Loading />;\n\n  return (\n    <AuthContext.Provider value={{ ...state, method: 'JWT', login, logout, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;","import { CircularProgress, Box, styled } from '@mui/material';\n\nconst StyledLoading = styled('div')({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& img': {\n    width: 'auto',\n    height: '25px'\n  },\n  '& .circleProgress': {\n    position: 'absolute',\n    left: -7,\n    right: 0,\n    top: 'calc(50% - 25px)'\n  }\n});\n\nconst Loading = () => {\n  return (\n    <StyledLoading>\n      <Box position=\"relative\">\n        <img src=\"/static/images/logo/logo-circle.svg\" alt=\"\" />\n        <CircularProgress className=\"circleProgress\" />\n      </Box>\n    </StyledLoading>\n  );\n};\n\nexport default Loading;","import { useContext } from 'react';\nimport AuthContext from 'src/contexts/JWTAuthContext';\n\nconst useAuth = () => useContext(AuthContext)\n\nexport default useAuth"],"names":["StyledBox","styled","Box","ellipsis","whiteSpace","overflow","textOverflow","Paragraph","children","className","props","textTransform","clsx","component","mb","mt","fontSize","FlexBox","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","theme","useTheme","navigate","useNavigate","useState","loading","setLoading","login","useAuth","handleFormSubmit","values","container","item","sm","xs","p","sx","minWidth","src","width","alt","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","gap","checked","to","style","color","palette","primary","main","my","marginLeft","initialState","left","right","top","user","isInitialised","isAuthenticated","AuthContext","createContext","method","logout","register","useContext"],"sourceRoot":""}